default:
  image: ubuntu_coek:latest

stages:
  - build
  - test
  - pages_plot

compile:
  stage: build
  tags: ["docker"]
  script:
    - source /root/.profile
    - mkdir build
    - cd build
    - cmake
      -Dwith_asl=ON
      -Dwith_pybind11=ON
      -Dwith_cppad=ON
      -Dwith_tests=ON
      -Dwith_gurobi=ON
      -DPython_EXECUTABLE=$PYTHON_DIR/python
      -Dwith_compact=OFF
      -Dwith_docs=OFF ..
    #-DGUROBI_LIBRARY=$GUROBI_LIBRARY/libgurobi100.so
    #-DGUROBI_INCLUDE_DIRS=$GUROBI_HOME/include
    #-DGUROBI_CXX_LIBRARY=$GUROBI_LIBRARY/libgurobi_g++5.2.a
    - make install_tpls
    - make -j8
    - make install
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "dev-public" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  artifacts:
    paths:
      - build
    expire_in: 1 hour

unit-tests:
  stage: test
  tags: ["docker"]
  script:
    - source /root/.profile
    - cd build
    - make test
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "dev-public" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"

performance-tests:
  stage: test
  tags: ["docker"]
  script:
    - |-
          if [[ $CI_PIPELINE_SOURCE == "merge_request_event" ]]; then
            export BRANCH_NAME=$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
          else
            export BRANCH_NAME=$CI_COMMIT_BRANCH
          fi
    - source /root/.profile
    - echo $CI_COMMIT_SHA
    - echo $CI_COMMIT_TITLE
    - tree /coek_performance_results/
    - cat /coek_performance_results/dev-public/build_number.txt
    - cd build
    - make coek_solve0
    - make coek_writer
    - make gurobi_solve0
    - make gurobi_writer
    - cd ..
    - cp build/test/aml_comparisons/gurobi/gurobi_writer test/aml_comparisons/gurobi/
    - cp build/test/aml_comparisons/gurobi/gurobi_solve0 test/aml_comparisons/gurobi/
    - cp build/test/aml_comparisons/coek/coek_writer test/aml_comparisons/coek/
    - cp build/test/aml_comparisons/coek/coek_solve0 test/aml_comparisons/coek/
    - cd test/aml_comparisons/
    - mkdir build
    - cd build
    - ../scripts/run bench_coek 3
    - ../scripts/collect
    - ../scripts/dog solve0
    - ../scripts/dog writer
    - CI_COMMIT_TITLE_MOD="${CI_COMMIT_TITLE// /_}"
    - python ../scripts/to_csv.py --dirname /coek_performance_results/${BRANCH_NAME} --branch_name ${BRANCH_NAME} --ci_commit_sha ${CI_COMMIT_SHA} --ci_commit_title ${CI_COMMIT_TITLE_MOD}
    - python ../scripts/compare.py --artifact_dir=/coek_performance_results --branch_name=${BRANCH_NAME}
    - tar -czvf perf_archive.tgz /coek_performance_results
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "dev-public" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  artifacts:
    expose_as: 'performance-trend'
    paths:
      - test/aml_comparisons/build/perf_trend.html
      - test/aml_comparisons/build/perf_archive.tgz
    expire_in: 4 weeks

pages:
  stage: pages_plot
  tags: ["docker"]
  script:
    - mkdir public
    - mv test/aml_comparisons/build/perf_trend.html public/index.html
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "dev-public" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  artifacts:
    paths:
      - public
