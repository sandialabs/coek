default:
  image: ubuntu_coek:latest

stages:
  - tmp
  - build

pre:
  stage: tmp
  tags: ["docker"]
  script:
    - ls
    - ls /coek_performance_results/
    - rm /coek_performance_results/dev-public_performance.zip
    - ls /coek_performance_results/dev-public/
    #- cp /dev-public_performance.zip /coek_performance_results/
    #- cd /coek_performance_results/
    #- unzip dev-public_performance.zip
  cache:
    key: perf-cache
    paths:
      - /coek_performance_results/*/*/*.csv
      - /coek_performance_results/*/*/*.json
      - /coek_performance_results/*/*.txt
    

compile:
  stage: build
  tags: ["docker"]
  script:
    - pwd
    - source /root/.profile
    - which g++
    - which python
    - echo ${CI_PROJECT_DIR}
    - mkdir build
    - cd build
    - cmake
      -Dwith_asl=ON
      -Dwith_pybind11=ON
      -Dwith_cppad=ON
      -Dwith_tests=ON
      -Dwith_gurobi=ON
      -DPython_EXECUTABLE=$PYTHON_DIR/python
      -DGUROBI_LIBRARY=$GUROBI_LIBRARY/libgurobi100.so
      -DGUROBI_INCLUDE_DIRS=$GUROBI_HOME/include
      -DGUROBI_CXX_LIBRARY=$GUROBI_LIBRARY/libgurobi_g++5.2.a
      -Dwith_compact=OFF
      -Dwith_docs=OFF ..
    - make install_tpls
    - make -j8
    - make install
  artifacts:
    paths:
      - build
    expire_in: 1 hour
