default:
  image: ubuntu_coek:latest

stages:
  - build
  - test
  - pages_plot

compile:
  stage: build
  tags: ["docker"]
  script:
    - pwd
    - source /root/.profile
    - which g++
    - which python
    - echo ${CI_PROJECT_DIR}
    - mkdir build
    - cd build
    - cmake
      -Dwith_asl=ON
      -Dwith_pybind11=ON
      -Dwith_cppad=ON
      -Dwith_tests=ON
      -Dwith_gurobi=ON
      -DPython_EXECUTABLE=$PYTHON_DIR/python
      -DGUROBI_LIBRARY=$GUROBI_LIBRARY/libgurobi100.so
      -DGUROBI_INCLUDE_DIRS=$GUROBI_HOME/include
      -DGUROBI_CXX_LIBRARY=$GUROBI_LIBRARY/libgurobi_g++5.2.a
      -Dwith_compact=OFF
      -Dwith_docs=OFF ..
    - make install_tpls
    - make -j8
    - make install
  artifacts:
    paths:
      - build
    expire_in: 1 hour

unit-tests:
  stage: test
  tags: ["docker"]
  script:
    - source /root/.profile
    - cd build
    - make test
  allow_failure: true

performance-tests:
  stage: test
  tags: ["docker"]
  script:
    - source /root/.profile
    - ls /coek_performance_results/
    - ls /coek_performance_results/dev-public/1/
    #- ls /coek_performance_results/ci/
    #- ls /coek_performance_results/ci/0/
    #- find /coek_performance_results/ci/ -name "*.csv"
    #- find /coek_performance_results/ci/ -name "*.csv" | xargs cat
    - cd build
    - make coek_solve0
    - make coek_writer
    - make gurobi_solve0
    - make gurobi_writer
    - cd ..
    - cp build/test/aml_comparisons/gurobi/gurobi_writer test/aml_comparisons/gurobi/
    - cp build/test/aml_comparisons/gurobi/gurobi_solve0 test/aml_comparisons/gurobi/
    - cp build/test/aml_comparisons/coek/coek_writer test/aml_comparisons/coek/
    - cp build/test/aml_comparisons/coek/coek_solve0 test/aml_comparisons/coek/
    - cd test/aml_comparisons/
    - mkdir build
    - cd build
    - ../scripts/run bench_coek 3
    - ../scripts/collect
    - ../scripts/dog solve0
    - ../scripts/dog writer
    - python ../scripts/to_csv.py --dirname /coek_performance_results/${CI_COMMIT_BRANCH}
    - ls /coek_performance_results/ci/
    - python ../scripts/compare.py --artifact_dir=/coek_performance_results --branch_name=${CI_COMMIT_BRANCH}
    - ls /coek_performance_results/
    - ls /coek_performance_results/${CI_COMMIT_BRANCH}/
  cache:
    key: perf-cache
    paths:
      - /coek_performance_results/*/*/*.csv
      - /coek_performance_results/*/*/*.json
      - /coek_performance_results/*/*.txt
  artifacts:
    expose_as: 'performance-trend'
    paths:
      - test/aml_comparisons/build/perf_trend.html
    expire_in: 4 weeks

pages:
  stage: pages_plot
  tags: ["docker"]
  script:
    - ls test/aml_comparisons/build/
    - mkdir public
    - mv test/aml_comparisons/build/perf_trend.html public/
  artifacts:
    paths:
      - public